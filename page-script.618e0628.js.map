{"version":3,"sources":["js/api.js","js/render.js","js/lazyLoading.js","js/page-script.js"],"names":["sendApi","mockData","label","id","dishes","weight","price","category","mockDataCat","find","item","cardTemplate","document","querySelector","content","cardsNode","cleanNode","node","firstChild","removeChild","lastChild","renderCard","dishData","categoryId","cardNode","cloneNode","dataset","src","textContent","renderErrorNode","errorNode","createElement","append","renderCategory","categoryData","cardsList","className","forEach","dish","dishCard","appendChild","initLazy","lazyImages","window","lazyImageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","lazyImage","target","srcset","classList","remove","unobserve","observe","active","lazyLoad","setTimeout","getBoundingClientRect","top","innerHeight","bottom","getComputedStyle","display","filter","image","length","removeEventListener","addEventListener","DEFAULT_CATEGORY","ACTIVE_CLASS","menuLinks","Array","from","querySelectorAll","activeCategory","setActiveItem","link","add","switchCategory","data","slice","call","menuLinkClickHandler","event","targetLink","contains","menuNode"],"mappings":"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","file":"page-script.618e0628.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst mockData = [\n  {\n    label: 'Супы',\n    id: 'soups',\n    dishes: [\n      {\n        id: 1,\n        label: 'Суп из семи залупзалуп',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Щи, хоть хуй полощи',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 1,\n        label: 'Суп из семи залуп',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Щи, хоть хуй полощи',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 1,\n        label: 'Суп из семи залуп',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Щи, хоть хуй полощи',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 1,\n        label: 'Суп из семи залуп',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Щи, хоть хуй полощи',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 1,\n        label: 'Суп из семи залуп',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Щи, хоть хуй полощи',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 1,\n        label: 'Суп из семи залуп',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Щи, хоть хуй полощи',\n        weight: '200/30',\n        price: 500,\n      },\n    ],\n  },\n  {\n    label: 'Горячие блюда',\n    id: 'hot',\n    dishes: [\n      {\n        id: 1,\n        label: 'Пирожок',\n        weight: '200/30',\n        price: 500,\n      },\n      {\n        id: 2,\n        label: 'Расстегай',\n        weight: '200/30',\n        price: 500,\n      },\n    ],\n  },\n];\n\nasync function sendApi(category) {\n  // const response = await fetch(`https://ws7r41qs05.execute-api.eu-central-1.amazonaws.com/default/EL_MENU?category=${category}`, {\n  // });\n  // if (response.ok) {\n  //   return await response.json();\n  // } else {\n  //   return false;\n  // }\n  const mockDataCat = await mockData.find(item => (item.id === category));\n  return mockDataCat.dishes;\n}\n\nexport default sendApi;\n","'use strict';\n\nconst cardTemplate = document.querySelector('#template-card').content;\nconst cardsNode = document.querySelector('.cards');\n\nfunction cleanNode(node) {\n  while (node.firstChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\nfunction renderCard(dishData, categoryId) {\n  const {\n    id,\n    label,\n    weight,\n    price,\n  } = dishData;\n  const cardNode = cardTemplate.cloneNode(true);\n  const cardImage = cardNode.querySelector('.card-image figure img');\n  cardImage.dataset.src = `menu/${categoryId}/${id}.jpg`;\n  const cardTitle = cardNode.querySelector('.card__title');\n  cardTitle.textContent = label;\n  const cardWeight = cardNode.querySelector('.card__weight span');\n  cardWeight.textContent = weight;\n  const cardPrice = cardNode.querySelector('.card__price span');\n  cardPrice.textContent = price;\n\n  return cardNode;\n}\n\nexport function renderErrorNode() {\n  cleanNode(cardsNode);\n  const errorNode = document.createElement('p');\n  errorNode.textContent = 'Произошла ошибка, приносим извинения.';\n  cardsNode.append(errorNode);\n}\n\nexport function renderCategory(categoryData, categoryId) {\n  cleanNode(cardsNode);\n  const cardsList = document.createElement('ul');\n  cardsList.className = 'columns cards__list is-multiline';\n  categoryData.forEach(dish => {\n    const dishCard = renderCard(dish, categoryId);\n    cardsList.appendChild(dishCard);\n  });\n  cardsNode.appendChild(cardsList);\n}\n","function initLazy(lazyImages) {\n    if (\"IntersectionObserver\" in window) {\n      let lazyImageObserver = new IntersectionObserver(function(entries, observer) {\n        entries.forEach(function(entry) {\n          if (entry.isIntersecting) {\n            let lazyImage = entry.target;\n            lazyImage.src = lazyImage.dataset.src;\n            lazyImage.srcset = lazyImage.dataset.srcset;\n            lazyImage.classList.remove(\"lazy\");\n            lazyImageObserver.unobserve(lazyImage);\n          }\n        });\n      });\n\n      lazyImages.forEach(function(lazyImage) {\n        lazyImageObserver.observe(lazyImage);\n      });\n    } else {\n      // Possibly fall back to a more compatible method here\n      let active = false;\n\n      const lazyLoad = function() {\n        if (active === false) {\n          active = true;\n\n          setTimeout(function() {\n            lazyImages.forEach(function(lazyImage) {\n              if ((lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0) && getComputedStyle(lazyImage).display !== \"none\") {\n                lazyImage.src = lazyImage.dataset.src;\n                lazyImage.srcset = lazyImage.dataset.srcset;\n                lazyImage.classList.remove(\"lazy\");\n\n                lazyImages = lazyImages.filter(function(image) {\n                  return image !== lazyImage;\n                });\n\n                if (lazyImages.length === 0) {\n                  document.removeEventListener(\"scroll\", lazyLoad);\n                  window.removeEventListener(\"resize\", lazyLoad);\n                  window.removeEventListener(\"orientationchange\", lazyLoad);\n                }\n              }\n            });\n\n            active = false;\n          }, 200);\n        }\n      };\n\n      document.addEventListener(\"scroll\", lazyLoad);\n      window.addEventListener(\"resize\", lazyLoad);\n      window.addEventListener(\"orientationchange\", lazyLoad);\n    }\n}\n\nexport default initLazy;\n","'use strict';\n\nimport sendApi from './api';\nimport { renderCategory, renderErrorNode } from './render';\nimport initLazy from './lazyLoading';\n\nconst DEFAULT_CATEGORY = 'soups';\nconst ACTIVE_CLASS = 'is-active';\n\n\nconst menuLinks = Array.from(document.querySelectorAll('.menu-list__link'));\n\nlet activeCategory;\n\nfunction setActiveItem(categoryId) {\n  menuLinks.forEach(link => {\n    link.classList.remove(ACTIVE_CLASS);\n  });\n  const activeLink = menuLinks.find(item => item.dataset['category'] === categoryId);\n  activeLink.classList.add(ACTIVE_CLASS)\n}\n\nasync function switchCategory(categoryId) {\n  if (categoryId !== activeCategory) {\n    activeCategory = categoryId;\n    setActiveItem(activeCategory);\n    const data = await sendApi(activeCategory);\n\n    if (data) {\n      renderCategory(data, activeCategory);\n      let lazyImages = [].slice.call(document.querySelectorAll(\"img.lazy\"));\n      initLazy(lazyImages)\n    } else {\n      renderErrorNode();\n    }\n  }\n}\n\nfunction menuLinkClickHandler(event) {\n  const targetLink = event.target;\n  if (targetLink.classList.contains('menu-list__link')) {\n    const categoryId = targetLink.dataset['category'];\n    switchCategory(categoryId);\n  }\n}\n\nswitchCategory(DEFAULT_CATEGORY);\nconst menuNode = document.querySelector('.menu-list');\nmenuNode.addEventListener('click', menuLinkClickHandler);\n"]}